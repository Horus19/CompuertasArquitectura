// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way(in=load,sel=address,a=A,b=B,c=C,d=D,e=E,f=F,g=G,h=H);
    
    Register(in = in, load = A, out = outa);
    Register(in = in, load = B, out = outb);
    Register(in = in, load = C, out = outc);
    Register(in = in, load = D, out = outd);
    Register(in = in, load = E, out = oute);
    Register(in = in, load = F, out = outf);
    Register(in = in, load = G, out = outg);
    Register(in = in, load = H, out = outh);

    Mux8Way16(a=outa,b=outb,c=outc,d=outd,e=oute,f=outf,g=outg,h=outh,sel=address,out=out);
}